* {
  box-sizing: border-box;
}

body {
  margin: 0;
  min-height: 100vh;
  font-family: 'Arial Rounded MT Bold', 'Arial Rounded', Arial, sans-serif;
  color: #272B34;
  background: url('../images/background/background.png') no-repeat center/cover;
  position: relative;
  overflow: hidden;
}

main.landing {
  position: relative;
  width: 100%;
  min-height: 100vh;
}

.hero {
  position: absolute;
  bottom: 32vh;
  left: 50%;
  max-width: 300px;
  max-height: 300px;
  transform: translateX(150%);
  animation: hero-slide 1.35s cubic-bezier(0.22, 0.61, 0.36, 1) forwards,
    hero-float 3.5s ease-in-out 1.35s infinite;
  image-rendering: auto;
  z-index: 2;
  pointer-events: none;
}

@keyframes hero-slide {
  0% { transform: translateX(150%); }
  80% { transform: translateX(-54%); }
  100% { transform: translateX(-50%); }
}

@keyframes hero-float {
  0%   { transform: translateX(-50%) translateY(0); }
  50%  { transform: translateX(-50%) translateY(-16px); }
  100% { transform: translateX(-50%) translateY(0); }
}

/* Bubble field */
.bubbles {
  position: absolute;
  inset: 0;
  overflow: hidden;
  pointer-events: none;
  z-index: 1;
}

/* ---- Realistic bubbles ----
   Using animatable custom properties so multiple animations can
   combine without fighting over 'transform'.
*/
@property --tx { syntax: '<length>'; initial-value: 0px; inherits: false; }
@property --ty { syntax: '<length>'; initial-value: 0px; inherits: false; }
@property --sx { syntax: '<number>'; initial-value: 1;   inherits: false; }
@property --sy { syntax: '<number>'; initial-value: 1;   inherits: false; }
@property --rot { syntax: '<angle>';  initial-value: 0deg; inherits: false; }

/* Synced bubbles: no animation-delay; JS sets --left/--size/--duration */
/* ---- Realistic bubbles (clearer, less white) ---- */
.bubble {
  --drift: 0px;
  position: absolute;
  bottom: -80px;
  left: var(--left);
  width: var(--size);
  height: var(--size);
  border-radius: 50%;
  opacity: 0;

  /* Clear body with subtle rim */
  background:
    radial-gradient(closest-side,
      rgba(255,255,255,0.25) 0%,
      rgba(255,255,255,0.12) 55%,
      rgba(255,255,255,0.05) 70%,
      rgba(255,255,255,0) 100%);

  /* faint blue rim glow */
  box-shadow:
    inset 0 0 8px rgba(255,255,255,0.18),
    0 2px 10px rgba(120,170,220,0.12);

  /* transforms driven by variables */
  transform: translate3d(var(--tx), var(--ty), 0) rotate(var(--rot)) scale(var(--sx), var(--sy));
  will-change: transform, opacity;

  animation:
    bubble-rise var(--duration) cubic-bezier(.22,.61,.36,1) infinite,
    bubble-drift calc(var(--duration) * 0.45) ease-in-out infinite alternate,
    bubble-wobble calc(var(--duration) * 0.38) ease-in-out infinite,
    bubble-spin   calc(var(--duration) * 0.9)  ease-in-out infinite alternate;
}

/* Smaller, softer highlight dot */
.bubble::before {
  top: 20%;
  left: 25%;
  width: 20%;
  height: 20%;
  background: radial-gradient(circle at 40% 40%,
    rgba(255,255,255,0.7) 0%,
    rgba(255,255,255,0.0) 70%);
  filter: blur(3px);
  opacity: 0.7;
}

/* Very soft inner lensing, almost invisible */
.bubble::after {
  inset: 15%;
  background: radial-gradient(circle at 50% 45%,
    rgba(255,255,255,0.15) 0%,
    rgba(255,255,255,0.05) 50%,
    rgba(255,255,255,0) 100%);
  filter: blur(2.5px);
  opacity: 0.6;
}

/* Rise: non-linear opacity + slight pressure expansion as it ascends */
@keyframes bubble-rise {
  0%   { --ty: 0px;                 --sx: 0.95; --sy: 0.95; opacity: 0; }
  10%  {                            --sx: 0.98; --sy: 0.98; opacity: 0.45; }
  40%  {                            --sx: 1.02; --sy: 1.02; opacity: 0.92; }
  100% { --ty: -110vh;              --sx: 1.06; --sy: 1.06; opacity: 0; }
}

/* Organic horizontal meander tied to --drift */
@keyframes bubble-drift {
  0%   { --tx: calc(var(--drift) * -1); }
  100% { --tx: calc(var(--drift)); }
}

/* Water wobble: subtle squash & stretch out of phase */
@keyframes bubble-wobble {
  0%   { --sx: calc(var(--sx));   --sy: calc(var(--sy)); }
  25%  { --sx: calc(var(--sx) * 0.985); --sy: calc(var(--sy) * 1.015); }
  50%  { --sx: calc(var(--sx) * 1.01);  --sy: calc(var(--sy) * 0.99); }
  75%  { --sx: calc(var(--sx) * 0.99);  --sy: calc(var(--sy) * 1.01); }
  100% { --sx: calc(var(--sx));   --sy: calc(var(--sy)); }
}

/* Tiny spin for parallax sparkle */
@keyframes bubble-spin {
  0%   { --rot: -2deg; }
  100% { --rot: 3deg; }
}

/* Message card & overlay (unchanged) */
.message-card {
  position: absolute;
  left: 50%;
  bottom: 16px;
  max-height: 120px;
  transform: translate(-50%, calc(100% + 16px)) scale(0.9);
  min-width: 400px;
  padding: 24px;
  border-radius: 16px;
  background: rgba(255, 255, 255, 0.96);
  display: flex;
  gap: 24px;
  align-items: flex-start;
  text-align: left;
  overflow: hidden;
  box-shadow: 0 18px 36px rgba(0, 0, 0, 0.25);
  animation: message-pop 0.5s ease-out forwards;
  animation-delay: 2.2s;
  z-index: 3;
  cursor: pointer;
  transition: transform 0.6s ease, opacity 0.6s ease;
  visibility: visible;
}

@keyframes message-pop {
  0%   { transform: translate(-50%, calc(100% + 16px)) scale(0.8); opacity: 0; }
  60%  { transform: translate(-50%, -8px) scale(1.05); opacity: 1; }
  100% { transform: translate(-50%, 0) scale(1); opacity: 1; }
}

.message-text { flex: 1; display: flex; flex-direction: column; gap: 8px; }
.message-text .message-title { margin: 0; font-size: 20px; color: #888888; }
.message-text .message-subtitle { margin: 0; font-size: 32px; color: #272B34; }

.message-enemy { width: 200px; height: 200px; transform: translate(60px, -20px); }

.message-card:focus-visible { outline: 3px solid #006aff; outline-offset: 4px; }
.message-card:active { transform: translate(-50%, 4px) scale(0.98); }
.message-card--hidden { visibility: hidden; pointer-events: none; display: none; }

body.level-open { overflow: hidden; }
body.level-open .message-card {
  transform: translate(-50%, -40vh) scale(1.2);
  opacity: 0;
  pointer-events: none;
}

.level-overlay {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 24px;
  background: rgba(22, 28, 38, 0.25);
  opacity: 0;
  transform: translateY(48px);
  pointer-events: none;
  transition: opacity 0.6s ease, transform 0.6s ease;
  z-index: 5;
}

.level-overlay .level-card {
  width: min(420px, 100%);
  padding: 32px 32px 36px;
  border-radius: 16px;
  background: #fff;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 24px;
  box-shadow: 0 24px 54px rgba(17, 30, 52, 0.35);
  transform: translateY(24px) scale(0.95);
  transition: transform 0.6s ease;
}

.level-overlay .level-info { display: flex; flex-direction: column; align-items: center; gap: 6px; }
.level-overlay .math-type { margin: 0; font-size: 18px; letter-spacing: 0.12em; text-transform: uppercase; color: #778099; }
.level-overlay .battle-title { margin: 0; font-size: 40px; font-weight: 700; color: #272b34; }
.level-overlay .enemy-image { width: min(220px, 60%); height: auto; }

.level-overlay .battle-stats {
  width: 100%;
  display: flex;
  justify-content: space-between;
  gap: 16px;
  padding: 16px 20px;
  background: rgba(0, 48, 120, 0.08);
  border-radius: 12px;
}

.level-overlay .battle-stat { flex: 1; display: flex; flex-direction: column; align-items: center; gap: 6px; }
.level-overlay .stat-label { font-size: 14px; letter-spacing: 0.1em; text-transform: uppercase; color: #7a859b; }
.level-overlay .stat-value { font-size: 28px; font-weight: 700; color: #1d2433; }

.level-overlay .btn-primary {
  width: 100%;
  height: 64px;
  background: #006aff;
  color: #fff;
  border: none;
  border-radius: 12px;
  font-family: 'Arial Rounded MT Bold', 'Arial Rounded', Arial, sans-serif;
  font-size: 20px;
  letter-spacing: 0.02em;
  cursor: pointer;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.level-overlay .btn-primary:focus-visible { outline: 3px solid #00a1ff; outline-offset: 2px; }
.level-overlay .btn-primary:hover { transform: translateY(-2px); box-shadow: 0 12px 28px rgba(0, 106, 255, 0.35); }

body.level-open .level-overlay { opacity: 1; transform: translateY(0); pointer-events: auto; }
body.level-open .level-overlay .level-card { transform: translateY(0) scale(1); }

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce) {
  .bubble { animation: none; opacity: 0.35; }
  .hero { animation: none; transform: translateX(-50%); }
  .message-card { animation: none; }
}
